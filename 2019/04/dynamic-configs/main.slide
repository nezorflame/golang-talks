Dynamic app configuration
Configuring your apps and services, dynamically
19:30 11 Apr 2019
Tags: golang, config, etcd, vault

Ilya Danilkin
Senior Server Developer, Tech Ozon
idanilkin@ozon.ru
https://habr.com/ru/company/ozontech
@nezorflame

* Quick roundup on configs

.background images/background.png

    In computing, configuration files (or config files) are files used to configure the parameters
    and initial settings for some computer programs.
.caption © [[https://en.wikipedia.org/wiki/Configuration_file][️Wikipedia]]

*Main*purposes:*

- Application setup
- Removing sensitive info from the source
- Changing behaviour without recompilation

.image images/TEACHING_GOPHER.png 200 _

* Static configs

.background images/background.png

Pros:

- Reliable
- Accessible

Cons:

- Not very secure
- App should be restarted on change

.image images/LazyGopher.png 200 _

* Dynamic configs

.background images/background.png

Different approaches:

- Local config with live reload (e.g. [[https://github.com/spf13/viper][Viper]] + [[https://github.com/fsnotify/fsnotify][fsnotify]])
- Remote storage (e.g. some database)
- Distributed store (e.g. [[https://coreos.com/etcd/][etcd]], [[https://www.consul.io/][Consul]])

.image images/MovingGopher.png 200 _

* etcd

.background images/background.png
.link https://github.com/etcd-io/etcd

- Well-defined, user-facing API (gRPC)
- Automatic TLS with optional client cert authentication
- Benchmarked 10,000 writes/sec
- Properly distributed using [[https://raft.github.io/][Raft]] consensus algorithm

* Dynamic configs

.background images/background.png

Pros:

- Live reload!
- More secure
- Can be integrated into infrastructure

Cons:

- More sophisticated
- Harder to set up
- Prone to issues (e.g. network)

* Secrets

.background images/background.png

- Technically, still a config...
- ...but should be separated from publicly-available config
- Needs protection from external access

.image images/BATMAN_GOPHER.png 200 _

* Vault

.background images/background.png
.link https://github.com/hashicorp/vault

- Secure secret storage
- Dynamic secrets
- Data encryption
- Leasing and renewal
- Revocation

.image images/HASHICORP_GOPHERS.png 120 _

* realtime-config-go

.background images/background.png

- *Client* and *Manager* interfaces
- *Provider* interface for different config providers
- Supports etcd, ENV, values.yaml (Helm integration), Vault
- *Ready()* channel to lock until config is ready
- *Watcher* funcs for variable change
- Utilities for config *update,*validation,*checks*

* Client

.background images/background.png
.image images/client.png 400 _

* Client Provider

.background images/background.png
.image images/client_provider.png 350 _

* Manager

.background images/background.png
.image images/manager.png 350 _

* Manager Provider

.background images/background.png
.image images/manager_provider.png 350 _

* Demo time!

.background images/background.png
.image images/GOPHER_SHARE.png 250 _

* Conclusion

.background images/background.png

- Dynamic configs provide more managed experience
- Live reload
- Secrets for sensitive info
- Utilities for validation and config uploads
- Integration with your current infrastructure

* When?

.background images/background.png

*Tech*OZON*: [[https://github.com/ozonru][Github]]

.image images/COMING_SOON_GOPHER.png 200 _

